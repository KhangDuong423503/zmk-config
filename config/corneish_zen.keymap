/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <32 33>;
            timeout-ms = <50>;
            layers = <0 1>;
        };
    };

    behaviors {
        mtl: mod_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LEFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            retro-tap;
            hold-trigger-key-positions = <6 18 31 30 7 8 9 10 19 20 21 22 31 32 33 34 39 23>;
            hold-trigger-on-release;
        };
        mtr: mod_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_RIGHT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            retro-tap;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
            hold-trigger-on-release;
        };
        comma_excl: comma_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_EXCL";
            bindings =
                <&kp COMMA>,
                <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_ques: dot_ques {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_QUES";
            bindings =
                <&kp DOT>,
                <&kp QMARK>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        osm: one_shot_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "ONE_SHOT_MOD";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
            quick-release;
            ignore-modifiers;
        };
        cwc: caps_word_custom {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS_WORD_CUSTOM";
            #binding-cells = <0>;
            continue-list = <MINUS UNDER BSPC DEL>;
            mods = <(MOD_LSFT)>;
        };
        rst: reset_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "RESET_BOOTLOADER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&none>,
                <&sys_reset>,
                <&bootloader>;
        };
        sel_words: sel_words {
            compatible = "zmk,behavior-mod-morph";
            label = "SEL_WORDS";
            bindings =
                <&sel_word>,
                <&sel_word_cont>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sel_lines: sel_lines {
            compatible = "zmk,behavior-mod-morph";
            label = "SEL_LINES";
            bindings =
                <&sel_line>,
                <&sel_line_cont>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        sel_word: sel_word {
            compatible = "zmk,behavior-macro";
            label = "SEL_WORD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT &kp LEFT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };
        sel_line: sel_line {
            compatible = "zmk,behavior-macro";
            label = "SEL_LINE";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp HOME>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp END>,
                <&macro_release>,
                <&kp LSHFT>;
        };
        sel_word_cont: sel_word_cont {
            compatible = "zmk,behavior-macro";
            label = "SEL_WORD_CONT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };
        sel_line_cont: sel_line_cont {
            compatible = "zmk,behavior-macro";
            label = "SEL_LINE_CONT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp DOWN>,
                <&macro_release>,
                <&kp LSHFT>;
        };
        triple_zero: triple_zero {
            compatible = "zmk,behavior-macro";
            label = "TRIPLE_ZERO";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp N0 &kp N0 &kp N0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            label = "CLMKDH";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  '  | CAPW |
            // | BKSP |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  | ENT  |
            // |  ESC |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,! -  .? |  ;  | to1  |
            //                    | mo4 | mo2 | OSS |   | SPC | mo3 | mo5 |

            bindings = <
 &kp TAB        &kp Q        &kp W         &kp F         &kp P       &kp B        &kp J         &kp L         &kp U        &kp Y      &kp SQT       &cwc
&kp BSPC  &mtl LWIN A  &mtl LALT R  &mtl LCTRL S  &mtl LSHFT T       &kp G        &kp M  &mtr RSHFT N  &mtr RCTRL E  &mtr RALT I  &mtr RWIN O  &kp ENTER
 &kp ESC        &kp Z        &kp X         &kp C         &kp D       &kp V        &kp K         &kp H   &comma_excl    &dot_ques     &kp SEMI      &to 1
                                           &mo 4         &mo 2  &osm LSHFT    &kp SPACE         &mo 3         &mo 5
            >;
        };

        layer_1 {
            label = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | CAPW |
            // | BKSP |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  '  | ENT  |
            // |  ESC |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,! -  .? |  ;  | to0  |
            //                    | mo4 | mo2 | OSS |   | SPC | mo3 | mo5 |

            bindings = <
&trans        &kp Q        &kp W         &kp E         &kp R   &kp T     &kp Y         &kp U         &kp I        &kp O          &kp P  &trans
&trans  &mtl LWIN A  &mtl LALT S  &mtl LCTRL D  &mtl LSHFT F   &kp G     &kp H  &mtr RSHFT J  &mtr RCTRL K  &mtr RALT L  &mtr RWIN SQT  &trans
&trans        &kp Z        &kp X         &kp C         &kp V   &kp B     &kp N         &kp M        &trans       &trans         &trans   &to 0
                                        &trans        &trans  &trans    &trans        &trans        &trans
            >;
        };

        layer_2 {
            label = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  ... |  '  |  <  |  >  |  "  |  .  |   |  &  |     |  [  |  ]  |  %  | CAPS |
            // | BKSP |  !  |  -  |  +  |  =  |  #  |   |  |  |  :  |  (  |  )  |  ?  | ENT  |
            // |  RST |  ^  |  /  |  *  |  \  |  `  |   |  ~  |  $  |  {  |  }  |  @  |      |
            //                    |     | mo2 |     |   |     | mo6 | RPT |

            bindings = <
 &none    &kp SQT     &kp LT    &kp GT    &kp DQT    &kp DOT     &kp AMPS      &none     &kp LBKT  &kp RBKT  &kp PRCNT  &kp CAPS
&trans   &kp EXCL  &kp MINUS  &kp PLUS  &kp EQUAL  &kp POUND     &kp PIPE  &kp COLON     &kp LPAR  &kp RPAR  &kp QMARK    &trans
  &rst  &kp CARET   &kp FSLH  &kp STAR   &kp BSLH  &kp GRAVE    &kp TILDE   &kp DLLR     &kp LBRC  &kp RBRC     &kp AT     &none
                                 &none     &trans      &none        &none      &mo 6  &key_repeat
            >;
        };

        layer_3 {
            label = "NAV";

            // --------------------------------------------------------------------------------
            // |  TAB | CSt | A<- | A-> |  Ct | INS |   |     | ... | ... | ... |     | ...  |
            // | BKSP | LFT |  UP | DWN | RGT | DEL |   |     | SFT | CTL | ALT | WIN | ENT  |
            // |  ESC |  Cz |  Cx |  Cc |  Cv |  Ca |   |     | HME | PGD | PGU | END | RST  |
            //                    | LIN | mo6 | WRD |   | SPC | mo3 | APP |

            bindings = <
&trans  &kp LC(LS(TAB))  &kp LA(LEFT)  &kp LA(RIGHT)  &kp LC(TAB)     &kp INS     &none      &none      &none      &none     &none   &none
&trans         &kp LEFT        &kp UP       &kp DOWN    &kp RIGHT     &kp DEL     &none  &kp RSHFT  &kp RCTRL   &kp RALT  &kp RWIN  &trans
&trans        &kp LC(Z)     &kp LC(X)      &kp LC(C)    &kp LC(V)   &kp LC(A)     &none   &kp HOME  &kp PG_DN  &kp PG_UP   &kp END    &rst
                                          &sel_lines        &mo 6  &sel_words    &trans     &trans  &kp K_APP
            >;
        };

        layer_4 {
            label = "MOUSE";

            // --------------------------------------------------------------------------------
            // |  ... | ... | ... | ... | ... | ... |   |     | BR- | VL- | VL+ | BR+ | PRSC |
            // | BKSP | WIN | ALT | CTL | SFT | DEL |   | PRV | ... | ... | ... | ... | NXT  |
            // |  ESC |  Cz |  Cx |  Cc |  Cv |  Ca |   |     | ... | ... | ... | ... |      |
            //                    | mo4 | ... | ... |   | STP | PLY | MUT |

            bindings = <
 &none      &none      &none      &none      &none      &none         &none  &kp C_BRI_DN  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_UP   &kp PSCRN
&trans   &kp LWIN   &kp LALT  &kp LCTRL  &kp LSHFT    &kp DEL    &kp C_PREV         &none         &none         &none         &none  &kp C_NEXT
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(A)         &none         &none         &none         &none         &none       &none
                                 &trans      &none      &none    &kp C_STOP      &kp C_PP    &kp C_MUTE
            >;
        };

        layer_5 {
            label = "NUMBER";

            // --------------------------------------------------------------------------------
            // |   %  |  -  |  9  |  8  |  7  |  /  |   |     |     |  <  |  >  |     | ...  |
            // | BKSP |  +  |  6  |  5  |  4  |  *  |   |     | SFT | CTL | ALT | WIN | ENT  |
            // |  ESC | ENT |  3  |  2  |  1  |  .  |   |     |     |  ,  |  .  |     |      |
            //                    | 000 |  0  |  =  |   | SPC |     | mo5 |

            bindings = <
&kp PRCNT  &kp MINUS  &kp N9        &kp N8  &kp N7  &kp SLASH     &none      &none     &kp LT    &kp GT     &none   &none
   &trans   &kp PLUS  &kp N6        &kp N5  &kp N4   &kp STAR     &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RWIN  &trans
   &trans  &kp ENTER  &kp N3        &kp N2  &kp N1    &kp DOT     &none      &none  &kp COMMA   &kp DOT     &none   &none
                              &triple_zero  &kp N0  &kp EQUAL    &trans      &none     &trans
            >;
        };

        layer_6 {
            label = "FUNC";

            // --------------------------------------------------------------------------------
            // |      | F12 |  F9 |  F8 |  F7 | NUM |   | USB |     |     |     |     | ...  |
            // |      | F11 |  F6 |  F5 |  F4 | SCR |   | BLE | SFT | CTL | ALT | WIN |      |
            // |      | F10 |  F3 |  F2 |  F1 | PSE |   | BT0 | BT1 | BT2 | BT3 | BT4 | BTCL |
            //                    |     | mo6 |     |   |     | mo6 |     |

            bindings = <
&none  &kp F12  &kp F9  &kp F8  &kp F7   &kp KP_NUM    &out OUT_USB         &none         &none         &none         &none       &none
&none  &kp F11  &kp F6  &kp F5  &kp F4     &kp SLCK    &out OUT_BLE     &kp RSHFT     &kp RCTRL      &kp RALT      &kp RWIN       &none
&none  &kp F10  &kp F3  &kp F2  &kp F1  &kp C_PAUSE    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                         &none  &trans        &none           &none        &trans         &none
            >;
        };
    };
};
