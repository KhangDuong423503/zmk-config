/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
&mmv {    
    time-to-max-speed-ms = <500>;
    acceleration-exponent=<1>;
};
&mwh {    
    time-to-max-speed-ms = <2000>;
    acceleration-exponent=<0>;
};
&sl {
    release-after-ms = <2000>;
};

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <32 33>;
            timeout-ms = <50>;
            layers = <0 1>;
        };

        combo_mo_tog_6 {
            bindings = <&td_mo_tog_6>;
            key-positions = <37 40>;
            timeout-ms = <100>;
            layers = <0 1>;
        };

        combo_html_cmt_open {
            bindings = <&html_cmt_open>;
            key-positions = <2 40>;
            timeout-ms = <100>;
            layers = <2>;
        };

        combo_html_cmt_close {
            bindings = <&html_cmt_close>;
            key-positions = <3 40>;
            timeout-ms = <100>;
            layers = <2>;
        };
    };

    behaviors {
        mtl: mod_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LEFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            global-quick-tap;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 23 30 31 32 33 34 39>;
            hold-trigger-on-release;
        };
        mtr: mod_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_RIGHT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            global-quick-tap;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
            hold-trigger-on-release;
        };

        comma_excl: comma_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_EXCL";
            bindings =
                <&kp COMMA>,
                <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_ques: dot_ques {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_QUES";
            bindings =
                <&kp DOT>,
                <&kp QMARK>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        osm: one_shot_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "ONE_SHOT_MOD";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
            quick-release;
            ignore-modifiers;
        };
        cwc: caps_word_custom {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS_WORD_CUSTOM";
            #binding-cells = <0>;
            continue-list = <MINUS UNDER BSPC DEL>;
            mods = <(MOD_LSFT)>;
        };
        rst: reset_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "RESET_BOOTLOADER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&none>,
                <&sys_reset>,
                <&bootloader>;
        };

        sel_words: sel_words {
            compatible = "zmk,behavior-mod-morph";
            label = "SEL_WORDS";
            bindings =
                <&sel_word>,
                <&kp LC(LS(RIGHT))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sel_lines: sel_lines {
            compatible = "zmk,behavior-mod-morph";
            label = "SEL_LINES";
            bindings =
                <&sel_line>,
                <&kp LS(DOWN)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mmv_left_change: mmv_left_change {
            compatible = "zmk,behavior-mod-morph";
            label = "MMV_LEFT_CHANGE";
            bindings =
                <&mmv MOVE_HOR(-1000)>,
                <&mmv_left_slow_fast>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mmv_left_slow_fast: mmv_left_slow_fast {
            compatible = "zmk,behavior-mod-morph";
            label = "MMV_LEFT_SLOW_FAST";
            bindings =
                <&mmv MOVE_HOR(-250)>,
                <&mmv MOVE_HOR(-3000)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mmv_down_change: mmv_down_change {
            compatible = "zmk,behavior-mod-morph";
            label = "MMV_DOWN_CHANGE";
            bindings =
                <&mmv MOVE_VERT(1000)>,
                <&mmv_down_slow_fast>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mmv_down_slow_fast: mmv_down_slow_fast {
            compatible = "zmk,behavior-mod-morph";
            label = "MMV_DOWN_SLOW_FAST";
            bindings =
                <&mmv MOVE_VERT(250)>,
                <&mmv MOVE_VERT(3000)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mmv_up_change: mmv_up_change {
            compatible = "zmk,behavior-mod-morph";
            label = "MMV_UP_CHANGE";
            bindings =
                <&mmv MOVE_VERT(-1000)>,
                <&mmv_up_slow_fast>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mmv_up_slow_fast: mmv_up_slow_fast {
            compatible = "zmk,behavior-mod-morph";
            label = "MMV_UP_SLOW_FAST";
            bindings =
                <&mmv MOVE_VERT(-250)>,
                <&mmv MOVE_VERT(-3000)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mmv_right_change: mmv_right_change {
            compatible = "zmk,behavior-mod-morph";
            label = "MMV_RIGHT_CHANGE";
            bindings =
                <&mmv MOVE_HOR(1000)>,
                <&mmv_right_slow_fast>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mmv_right_slow_fast: mmv_right_slow_fast {
            compatible = "zmk,behavior-mod-morph";
            label = "MMV_RIGHT_SLOW_FAST";
            bindings =
                <&mmv MOVE_HOR(250)>,
                <&mmv MOVE_HOR(3000)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mwh_left_change: mwh_left_change {
            compatible = "zmk,behavior-mod-morph";
            label = "MWH_LEFT_CHANGE";
            bindings =
                <&mwh SCROLL_HOR(-15)>,
                <&mwh_left_slow_fast>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mwh_left_slow_fast: mwh_left_slow_fast {
            compatible = "zmk,behavior-mod-morph";
            label = "MWH_LEFT_SLOW_FAST";
            bindings =
                <&mwh SCROLL_HOR(-5)>,
                <&mwh SCROLL_HOR(-50)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mwh_down_change: mwh_down_change {
            compatible = "zmk,behavior-mod-morph";
            label = "MWH_DOWN_CHANGE";
            bindings =
                <&mwh SCROLL_VERT(-15)>,
                <&mwh_down_slow_fast>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mwh_down_slow_fast: mwh_down_slow_fast {
            compatible = "zmk,behavior-mod-morph";
            label = "MWH_DOWN_SLOW_FAST";
            bindings =
                <&mwh SCROLL_VERT(-5)>,
                <&mwh SCROLL_VERT(-50)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mwh_up_change: mwh_up_change {
            compatible = "zmk,behavior-mod-morph";
            label = "MWH_UP_CHANGE";
            bindings =
                <&mwh SCROLL_VERT(15)>,
                <&mwh_up_slow_fast>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mwh_up_slow_fast: mwh_up_slow_fast {
            compatible = "zmk,behavior-mod-morph";
            label = "MWH_UP_SLOW_FAST";
            bindings =
                <&mwh SCROLL_VERT(5)>,
                <&mwh SCROLL_VERT(50)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mwh_right_change: mwh_right_change {
            compatible = "zmk,behavior-mod-morph";
            label = "MWH_RIGHT_CHANGE";
            bindings =
                <&mwh SCROLL_HOR(15)>,
                <&mwh_right_slow_fast>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mwh_right_slow_fast: mwh_right_slow_fast {
            compatible = "zmk,behavior-mod-morph";
            label = "MWH_RIGHT_SLOW_FAST";
            bindings =
                <&mwh SCROLL_HOR(5)>,
                <&mwh SCROLL_HOR(50)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        td_mo_tog_2: td_mo_tog_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO_TOG_2";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings =
                <&sl 2>,
                <&tog 2>;
        };
        td_mo_tog_3: td_mo_tog_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO_TOG_3";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings =
                <&mo_3_rel_alts>,
                <&tog 3>;
        };
        td_mo_tog_4: td_mo_tog_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO_TOG_4";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings =
                <&mo_4_rel_alts>,
                <&tog 4>;
        };
        td_mo_tog_5: td_mo_tog_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO_TOG_5";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings =
                <&sl 5>,
                <&tog 5>;
        };
        td_mo_tog_6: td_mo_tog_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO_TOG_6";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings =
                <&sl 6>,
                <&tog 6>;
        };
    };

    macros {
        sel_word: sel_word {
            compatible = "zmk,behavior-macro";
            label = "SEL_WORD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT &kp LEFT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        sel_line: sel_line {
            compatible = "zmk,behavior-macro";
            label = "SEL_LINE";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp HOME>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp END>,
                <&macro_release>,
                <&kp LSHFT>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        triple_zero: triple_zero {
            compatible = "zmk,behavior-macro";
            label = "TRIPLE_ZERO";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp N0 &kp N0 &kp N0>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        win_app_right: win_app_right {
            compatible = "zmk,behavior-macro";
            label = "WIN_APP_RIGHT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp TAB>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        win_app_left: win_app_left {
            compatible = "zmk,behavior-macro";
            label = "WIN_APP_LEFT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp LSHFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LSHFT>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        win_app_sel: win_app_sel {
            compatible = "zmk,behavior-macro";
            label = "WIN_APP_SEL";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT>;

            wait-ms = <10>;
            tap-ms = <10>;
        };
        mo_3_rel_alts: mo_3_rel_alts {
            compatible = "zmk,behavior-macro";
            label = "MO_3_REL_ALTS";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 3>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 3 &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT>;

            wait-ms = <0>;
            tap-ms = <10>;
        };
        mo_4_rel_alts: mo_4_rel_alts {
            compatible = "zmk,behavior-macro";
            label = "MO_4_REL_ALTS";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 4>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 4 &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT>;

            wait-ms = <0>;
            tap-ms = <10>;
        };
        tog_3_rel_alts: tog_3_rel_alts {
            compatible = "zmk,behavior-macro";
            label = "TOG_3_REL_ALTS";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&tog 3>,
                <&macro_release>,
                <&kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT>;

            wait-ms = <0>;
            tap-ms = <10>;
        };
        tog_4_rel_alts: tog_4_rel_alts {
            compatible = "zmk,behavior-macro";
            label = "TOG_4_REL_ALTS";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&tog 4>,
                <&macro_release>,
                <&kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT>;

            wait-ms = <0>;
            tap-ms = <10>;
        };
        search_web: search_web {
            compatible = "zmk,behavior-macro";
            label = "SEARCH_WEB";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(C) &kp LC(T)>,
                <&macro_wait_time 200>,
                <&macro_tap>,
                <&kp LC(V) &kp ENTER>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        html_close: html_close {
            compatible = "zmk,behavior-macro";
            label = "HTML_CLOSE";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LT &kp FSLH>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        html_cmt_open: html_cmt_open {
            compatible = "zmk,behavior-macro";
            label = "HTML_CMT_OPEN";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LT &kp EXCL &kp MINUS &kp MINUS>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        html_cmt_close: html_cmt_close {
            compatible = "zmk,behavior-macro";
            label = "HTML_CMT_CLOSE";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp MINUS &kp MINUS &kp GT>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            label = "CLMKDH";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  '  | CAPW |
            // | BKSP |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  | ENT  |
            // |  ESC |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,! -  .? |  ;  | to1  |
            //                    | mo4 | mo2 | OSS |   | SPC | mo3 | mo5 |

            bindings = <
 &kp TAB        &kp Q        &kp W         &kp F         &kp P       &kp B        &kp J         &kp L         &kp U        &kp Y      &kp SQT       &cwc
&kp BSPC  &mtl LWIN A  &mtl LALT R  &mtl LCTRL S  &mtl LSHFT T       &kp G        &kp M  &mtr RSHFT N  &mtr RCTRL E  &mtr RALT I  &mtr RWIN O  &kp ENTER
 &kp ESC        &kp Z        &kp X         &kp C         &kp D       &kp V        &kp K         &kp H   &comma_excl    &dot_ques     &kp SEMI      &to 1
                                    &td_mo_tog_4  &td_mo_tog_2  &osm LSHFT    &kp SPACE  &td_mo_tog_3  &td_mo_tog_5
            >;
        };

        layer_1 {
            label = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | CAPW |
            // | BKSP |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  '  | ENT  |
            // |  ESC |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,! -  .? |  ;  | to0  |
            //                    | mo4 | mo2 | OSS |   | SPC | mo3 | mo5 |

            bindings = <
&trans        &kp Q        &kp W         &kp E         &kp R   &kp T     &kp Y         &kp U         &kp I        &kp O          &kp P  &trans
&trans  &mtl LWIN A  &mtl LALT S  &mtl LCTRL D  &mtl LSHFT F   &kp G     &kp H  &mtr RSHFT J  &mtr RCTRL K  &mtr RALT L  &mtr RWIN SQT  &trans
&trans        &kp Z        &kp X         &kp C         &kp V   &kp B     &kp N         &kp M        &trans       &trans         &trans   &to 0
                                        &trans        &trans  &trans    &trans        &trans        &trans
            >;
        };

        layer_2 {
            label = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // | tog2 |  '  |  <  |  >  |  "  |  .  |   |  &  | </  |  [  |  ]  |  %  | CAPS |
            // | BKSP |  !  |  -  |  +  |  =  |  #  |   |  |  |  :  |  (  |  )  |  ?  | ENT  |
            // |  RST |  ^  |  /  |  *  |  \  |  `  |   |  ~  |  $  |  {  |  }  |  @  |      |
            //                    |     | mo2 |     |   | RPT |     |     |

            bindings = <
&tog 2         &kp SQT           &kp LT              &kp GT           &kp DQT    &kp DOT       &kp AMPS       &html_close         &kp LBKT        &kp RBKT        &kp PRCNT  &kp CAPS
&trans  &mtl LWIN EXCL  &mtl LALT MINUS  &mtl LCTRL KP_PLUS  &mtl LSHFT EQUAL  &kp POUND       &kp PIPE  &mtr RSHFT COLON  &mtr RCTRL LPAR  &mtr RALT RPAR  &mtr RWIN QMARK    &trans
  &rst       &kp CARET         &kp FSLH            &kp STAR          &kp BSLH  &kp GRAVE      &kp TILDE          &kp DLLR         &kp LBRC        &kp RBRC           &kp AT     &none
                                                      &none            &trans      &none    &key_repeat             &none            &none
            >;
        };

        layer_3 {
            label = "NAV";

            // --------------------------------------------------------------------------------
            // |  TAB | HME | PGU | PGD | END | INS |   |     | W<- | WSL | W-> | WEB | tog3 |
            // | BKSP | LFT |  UP | DWN | RGT | DEL |   |     | SFT | CTL | ALT | WIN | ENT  |
            // |  ESC |  Cz |  Cx |  Cc |  Cv |  Ca |   |     | CSt | A<- | A-> | Ct  | RST  |
            //                    | LIN |     | WRD |   | SPC | mo3 | APP |

            bindings = <
&trans   &kp HOME  &kp PG_UP   &kp PG_DN    &kp END     &kp INS     &none    &win_app_left  &win_app_sel  &win_app_right  &search_web  &tog_3_rel_alts
&trans   &kp LEFT     &kp UP    &kp DOWN  &kp RIGHT     &kp DEL     &none       &osm RSHFT    &osm RCTRL       &osm RALT    &osm RWIN           &trans
&trans  &kp LC(Z)  &kp LC(X)   &kp LC(C)  &kp LC(V)   &kp LC(A)     &none  &kp LC(LS(TAB))  &kp LA(LEFT)   &kp LA(RIGHT)  &kp LC(TAB)             &rst
                              &sel_lines      &none  &sel_words    &trans           &trans     &kp K_APP
            >;
        };

        layer_4 {
            label = "MOUSE";

            // --------------------------------------------------------------------------------
            // | tog4 | WEB | W<- | WSL | W-> | ENT |   | MUT | BR- | VL- | VL+ | BR+ | PRSC |
            // | BKSP | WIN | ALT | CTL | SFT | DEL |   | PRV | m<- | m|v | m|^ | m-> | NXT  |
            // |  ESC |  Cz |  Cx |  Cc |  Cv |  Ca |   | PLY | w<- | w|v | w|^ | w-> | STP  |
            //                    | mo4 | w|^ | w|v |   | LCL | MCL | RCL |

            bindings = <
&tog_4_rel_alts  &search_web  &win_app_left  &win_app_sel  &win_app_right         &kp ENTER    &kp C_MUTE      &kp C_BRI_DN      &kp C_VOL_DN    &kp C_VOL_UP       &kp C_BRI_UP   &kp PSCRN
         &trans     &kp LWIN       &kp LALT     &kp LCTRL       &kp LSHFT           &kp DEL    &kp C_PREV  &mmv_left_change  &mmv_down_change  &mmv_up_change  &mmv_right_change  &kp C_NEXT
         &trans    &kp LC(Z)      &kp LC(X)     &kp LC(C)       &kp LC(V)         &kp LC(A)      &kp C_PP  &mwh_left_change  &mwh_down_change  &mwh_up_change  &mwh_right_change  &kp C_STOP
                                                   &trans  &mwh_up_change  &mwh_down_change     &mkp LCLK         &mkp MCLK         &mkp RCLK
            >;
        };

        layer_5 {
            label = "NUMBER";

            // --------------------------------------------------------------------------------
            // |   %  |  -  |  7  |  8  |  9  |  /  |   |     |     |  <  |  >  |     | tog5 |
            // | BKSP |  +  |  4  |  5  |  6  |  *  |   |     | SFT | CTL | ALT | WIN | ENT  |
            // |  000 | ENT |  1  |  2  |  3  |  =  |   |     |     |  ,  |  .  |     |      |
            //                    |  .  |  0  | SPC |   | SPC |     | mo5 |

            bindings = <
   &kp PRCNT  &kp KP_MINUS  &kp N7      &kp N8  &kp N9     &kp KP_SLASH     &none       &none      &kp LT      &kp GT      &none  &tog 5
      &trans   &kp KP_PLUS  &kp N4      &kp N5  &kp N6  &kp KP_MULTIPLY     &none  &osm RSHFT  &osm RCTRL   &osm RALT  &osm RWIN  &trans
&triple_zero     &kp ENTER  &kp N1      &kp N2  &kp N3        &kp EQUAL     &none       &none   &kp COMMA  &kp KP_DOT      &none   &none
                                    &kp KP_DOT  &kp N0        &kp SPACE    &trans       &none      &trans
            >;
        };

        layer_6 {
            label = "FUNC";

            // --------------------------------------------------------------------------------
            // |      | F12 |  F7 |  F8 |  F9 | NUM |   | USB |     |     |     |     | tog6 |
            // |      | F11 |  F4 |  F5 |  F6 | SCR |   | BLE | SFT | CTL | ALT | WIN |      |
            // |      | F10 |  F1 |  F2 |  F3 | PBR |   | BT0 | BT1 | BT2 | BT3 | BT4 | BTCL |
            //                    |     | mo6 |     |   |     | mo6 |     |

            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9       &kp KP_NUM    &out OUT_USB         &none         &none         &none         &none      &tog 6
&none  &kp F11  &kp F4  &kp F5  &kp F6         &kp SLCK    &out OUT_BLE    &osm RSHFT    &osm RCTRL     &osm RALT     &osm RWIN       &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                         &none  &trans            &none           &none        &trans         &none
            >;
        };
    };
};
