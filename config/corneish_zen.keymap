/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            label = "CLMKDH";
            
            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  '  | CAPS |
            // | BKSP |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  | ENT  |
            // |  ESC |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  ;  | to1  |
            //                    | mo4 | mo2 | SFT |   | SPC | mo3 | mo5 |
            
            bindings = <
 &kp TAB  &kp Q  &kp W  &kp F  &kp P      &kp B        &kp J  &kp L      &kp U    &kp Y   &kp SQT  &kp CAPSLOCK
&kp BSPC  &kp A  &kp R  &kp S  &kp T      &kp G        &kp M  &kp N      &kp E    &kp I     &kp O       &kp RET
 &kp ESC  &kp Z  &kp X  &kp C  &kp D      &kp V        &kp K  &kp H  &kp COMMA  &kp DOT  &kp SEMI         &to 1
                        &mo 4  &mo 2  &kp LSHFT    &kp SPACE  &mo 3      &mo 5
            >;
        };

        layer_1 {
            label = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | CAPS |
            // | BKSP |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  '  | ENT  |
            // |  ESC |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  ;  | to0  |
            //                    | mo4 | mo2 | SFT |   | SPC | mo3 | mo5 |

            bindings = <
&trans  &kp Q  &kp W   &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I   &kp O           &kp P  &trans
&trans  &kp A  &kp S   &kp D   &kp F   &kp G     &kp H   &kp J   &kp K   &kp L  &kp APOSTROPHE  &trans
&trans  &kp Z  &kp X   &kp C   &kp V   &kp B     &kp N   &kp M  &trans  &trans          &trans   &to 0
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_2 {
            label = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  ... |  '  |  <  |  >  |  "  |  .  |   |  &  |  D  |  [  |  ]  |  %  | CAPS |
            // | BKSP |  !  |  -  |  +  |  =  |  #  |   |  |  |  :  |  (  |  )  |  ?  | ENT  |
            // |      |  ^  |  /  |  *  |  \  |  `  |   |  ~  |  $  |  {  |  }  |  @  |      |
            //                    |     | mo2 |     |   |     | mo6 |     |

            bindings = <
 &none    &kp SQT  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES    &kp DOT     &kp AMPS      &kp D  &kp LBKT  &kp RBKT  &kp PERCENT  &kp CAPS
&trans   &kp EXCL      &kp MINUS          &kp PLUS          &kp EQUAL  &kp POUND     &kp PIPE  &kp COLON  &kp LPAR  &kp RPAR    &kp QMARK    &trans
 &none  &kp CARET       &kp FSLH          &kp STAR           &kp BSLH  &kp GRAVE    &kp TILDE   &kp DLLR  &kp LBRC  &kp RBRC       &kp AT     &none
                                             &none             &trans      &none        &none      &mo 6     &none
            >;
        };

        layer_3 {
            label = "NAV";
            
            // --------------------------------------------------------------------------------
            // |  TAB | CSt | ... | ... |  Ct | INS |   |     | ... | ... | ... |     | ...  |
            // | BKSP | LFT |  UP | DWN | RGT | DEL |   |     | SFT | CTL | ALT | WIN | ENT  |
            // |  ESC |  Cz |  Cx |  Cc |  Cv |  Ca |   |     | HME | PGD | PGU | END |      |
            //                    |     | mo6 | ... |   | SPC | mo3 | APP |
            
            bindings = <
&trans  &kp LC(LS(TAB))      &none      &none  &kp LC(TAB)    &kp INS     &none      &none      &none      &none     &none   &none
&trans         &kp LEFT     &kp UP   &kp DOWN    &kp RIGHT    &kp DEL     &none  &kp LSHFT  &kp LCTRL   &kp LALT  &kp RGUI  &trans
&trans        &kp LC(Z)  &kp LC(X)  &kp LC(C)    &kp LC(V)  &kp LC(A)     &none   &kp HOME  &kp PG_DN  &kp PG_UP   &kp END   &none
                                        &none        &mo 6      &none    &trans     &trans  &kp K_APP
            >;
        };

        layer_4 {
            label = "MOUSE";
            
            // --------------------------------------------------------------------------------
            // |  ... | ... | ... | ... | ... | ... |   |     | BR- | VL- | VL+ | BR+ | PRSC |
            // | BKSP | WIN | ALT | CTL | SFT | DEL |   | PRV | ... | ... | ... | ... | NXT  |
            // |  ESC |  Cz |  Cx |  Cc |  Cv |  Ca |   |     | ... | ... | ... | ... |      |
            //                    | mo4 | ... | ... |   | STP | PLY | MUT |
            
            bindings = <
 &none         &none         &none      &none       &none      &none         &none  &kp C_BRIGHTNESS_DEC  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRIGHTNESS_INC  &kp PRINTSCREEN
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LSHIFT    &kp DEL    &kp C_PREV                 &none         &none         &none                 &none       &kp C_NEXT
&trans     &kp LC(Z)     &kp LC(X)  &kp LC(C)   &kp LC(V)  &kp LC(A)         &none                 &none         &none         &none                 &none            &none
                                       &trans       &none      &none    &kp C_STOP      &kp C_PLAY_PAUSE    &kp C_MUTE
            >;
        };

        layer_5 {
            label = "NUMBER";
            
            // --------------------------------------------------------------------------------
            // |   %  |  -  |  9  |  8  |  7  |  /  |   |     |     |  <  |  >  |     | ...  |
            // | BKSP |  +  |  6  |  5  |  4  |  *  |   |     | SFT | CTL | ALT | WIN | ENT  |
            // |  ESC | ENT |  3  |  2  |  1  |  .  |   |     |     |  ,  |  .  |     |      |
            //                    | ... |  0  |  =  |   | SPC |     | mo5 |
            
            bindings = <
&kp PERCENT  &kp MINUS  &kp NUMBER_9  &kp NUMBER_8  &kp NUMBER_7     &kp SLASH     &none            &none  &kp LESS_THAN  &kp GREATER_THAN          &none   &none
     &trans   &kp PLUS  &kp NUMBER_6  &kp NUMBER_5  &kp NUMBER_4  &kp ASTERISK     &none  &kp RIGHT_SHIFT      &kp RCTRL     &kp RIGHT_ALT  &kp RIGHT_WIN  &trans
     &trans  &kp ENTER  &kp NUMBER_3  &kp NUMBER_2  &kp NUMBER_1       &kp DOT     &none            &none      &kp COMMA           &kp DOT          &none   &none
                                             &none  &kp NUMBER_0     &kp EQUAL    &trans            &none         &trans
            >;
        };

        layer_6 {
            label = "FUNC";
            
            // --------------------------------------------------------------------------------
            // |      | F12 |  F9 |  F8 |  F7 | NUM |   |     |     |     |     |     | ...  |
            // |      | F11 |  F6 |  F5 |  F4 | SCR |   |     | SFT | CTL | ALT | WIN |      |
            // |      | F10 |  F3 |  F2 |  F1 | PSE |   | BT0 | BT1 | BT2 | BT3 | BT4 | BTCL |
            //                    |     | mo6 |     |   |     | mo6 |     |
            
            bindings = <
&none  &kp F12  &kp F9  &kp F8  &kp F7  &kp KP_NUMLOCK           &none            &none         &none          &none          &none       &none
&none  &kp F11  &kp F6  &kp F5  &kp F4  &kp SCROLLLOCK           &none  &kp RIGHT_SHIFT     &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_WIN       &none
&none  &kp F10  &kp F3  &kp F2  &kp F1     &kp C_PAUSE    &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4  &bt BT_CLR
                         &none  &trans           &none           &none           &trans         &none
            >;
        };
    };
};
