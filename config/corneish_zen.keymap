/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <32 33>;
            timeout-ms = <50>;
            layers = <0 1>;
        };

        combo_mo_tog_6 {
            bindings = <&td_mo_tog_6>;
            key-positions = <37 40>;
            timeout-ms = <100>;
            layers = <0 1>;
        };
    };

    behaviors {
        mtl: mod_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LEFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            global-quick-tap;
            flavor = "tap-preferred";
            retro-tap;
            hold-trigger-key-positions = <6 7 8 9 10 13 14 15 16 18 19 20 21 22 23 30 31 32 33 34 39>;
        };
        mtr: mod_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_RIGHT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            global-quick-tap;
            flavor = "tap-preferred";
            retro-tap;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 19 20 21 22 24 25 26 27 28 29>;
        };
        comma_excl: comma_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_EXCL";
            bindings =
                <&kp COMMA>,
                <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_ques: dot_ques {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_QUES";
            bindings =
                <&kp DOT>,
                <&kp QMARK>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        osm: one_shot_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "ONE_SHOT_MOD";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
            quick-release;
            ignore-modifiers;
        };
        cwc: caps_word_custom {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS_WORD_CUSTOM";
            #binding-cells = <0>;
            continue-list = <MINUS UNDER BSPC DEL>;
            mods = <(MOD_LSFT)>;
        };
        rst: reset_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "RESET_BOOTLOADER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&none>,
                <&sys_reset>,
                <&bootloader>;
        };
        sel_words: sel_words {
            compatible = "zmk,behavior-mod-morph";
            label = "SEL_WORDS";
            bindings =
                <&sel_word>,
                <&kp LC(LS(RIGHT))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <()>;
        };
        sel_lines: sel_lines {
            compatible = "zmk,behavior-mod-morph";
            label = "SEL_LINES";
            bindings =
                <&sel_line>,
                <&kp LS(DOWN)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        td_mo_tog_2: td_mo_tog_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO_TOG_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&mo 2>,
                <&tog 2>;
        };
        td_mo_tog_3: td_mo_tog_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO_TOG_3";
            #binding-cells = <0>;
            bindings =
                <&mo 3>,
                <&tog 3>;

            tapping-term-ms = <200>;
        };
        td_mo_tog_4: td_mo_tog_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO_TOG_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&mo 4>,
                <&tog 4>;
        };
        td_mo_tog_5: td_mo_tog_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO_TOG_5";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&mo 5>,
                <&tog 5>;
        };
        td_mo_tog_6: td_mo_tog_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO_TOG_6";
            #binding-cells = <0>;
            bindings =
                <&mo 6>,
                <&tog 6>;

            tapping-term-ms = <200>;
        };
    };

    macros {
        sel_word: sel_word {
            compatible = "zmk,behavior-macro";
            label = "SEL_WORD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT &kp LEFT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        sel_line: sel_line {
            compatible = "zmk,behavior-macro";
            label = "SEL_LINE";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp HOME>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp END>,
                <&macro_release>,
                <&kp LSHFT>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        triple_zero: triple_zero {
            compatible = "zmk,behavior-macro";
            label = "TRIPLE_ZERO";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp N0 &kp N0 &kp N0>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        win_app_right: win_app_right {
            compatible = "zmk,behavior-macro";
            label = "WIN_APP_RIGHT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp TAB>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        win_app_left: win_app_left {
            compatible = "zmk,behavior-macro";
            label = "WIN_APP_LEFT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp LSHFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LSHFT>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
        win_app_sel: win_app_sel {
            compatible = "zmk,behavior-macro";
            label = "WIN_APP_SEL";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT>;

            wait-ms = <10>;
            tap-ms = <10>;
        };
        search_web: search_web {
            compatible = "zmk,behavior-macro";
            label = "SEARCH_WEB";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(C) &kp LC(T)>,
                <&macro_wait_time 200>,
                <&macro_tap>,
                <&kp LC(V) &kp ENTER>;

            wait-ms = <50>;
            tap-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            label = "CLMKDH";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  '  | RPT  |
            // | BKSP |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  | ENT  |
            // |  ESC |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,! -  .? |  ;  | to1  |
            //                    | mo4 | mo2 | OSS |   | SPC | mo3 | mo5 |

            bindings = <
 &kp TAB        &kp Q        &kp W         &kp F         &kp P       &kp B        &kp J         &kp L         &kp U        &kp Y      &kp SQT       &cwc
&kp BSPC  &mtl LWIN A  &mtl LALT R  &mtl LCTRL S  &mtl LSHFT T       &kp G        &kp M  &mtr RSHFT N  &mtr RCTRL E  &mtr RALT I  &mtr RWIN O  &kp ENTER
 &kp ESC        &kp Z        &kp X         &kp C         &kp D       &kp V        &kp K         &kp H   &comma_excl    &dot_ques     &kp SEMI      &to 1
                                    &td_mo_tog_4  &td_mo_tog_2  &osm LSHFT    &kp SPACE  &td_mo_tog_3  &td_mo_tog_5
            >;
        };

        layer_1 {
            label = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | CAPW |
            // | BKSP |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  '  | ENT  |
            // |  ESC |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,! -  .? |  ;  | to0  |
            //                    | mo4 | mo2 | OSS |   | SPC | mo3 | mo5 |

            bindings = <
&trans        &kp Q        &kp W         &kp E         &kp R   &kp T     &kp Y         &kp U         &kp I        &kp O          &kp P  &trans
&trans  &mtl LWIN A  &mtl LALT S  &mtl LCTRL D  &mtl LSHFT F   &kp G     &kp H  &mtr RSHFT J  &mtr RCTRL K  &mtr RALT L  &mtr RWIN SQT  &trans
&trans        &kp Z        &kp X         &kp C         &kp V   &kp B     &kp N         &kp M        &trans       &trans         &trans   &to 0
                                        &trans        &trans  &trans    &trans        &trans        &trans
            >;
        };

        layer_2 {
            label = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // | tog2 |  '  |  <  |  >  |  "  |  .  |   |  &  |     |  [  |  ]  |  %  | CAPS |
            // | BKSP |  !  |  -  |  +  |  =  |  #  |   |  |  |  :  |  (  |  )  |  ?  | ENT  |
            // |  RST |  ^  |  /  |  *  |  \  |  `  |   |  ~  |  $  |  {  |  }  |  @  |      |
            //                    |     | mo2 |     |   |     | RPT |     |

            bindings = <
&tog 2    &kp SQT     &kp LT       &kp GT    &kp DQT    &kp DOT       &kp AMPS      &none  &kp LBKT  &kp RBKT  &kp PRCNT  &kp CAPS
&trans   &kp EXCL  &kp MINUS  &kp KP_PLUS  &kp EQUAL  &kp POUND       &kp PIPE  &kp COLON  &kp LPAR  &kp RPAR  &kp QMARK    &trans
  &rst  &kp CARET   &kp FSLH     &kp STAR   &kp BSLH  &kp GRAVE      &kp TILDE   &kp DLLR  &kp LBRC  &kp RBRC     &kp AT     &none
                                    &none     &trans      &none    &key_repeat      &none     &none
            >;
        };

        layer_3 {
            label = "NAV";

            // --------------------------------------------------------------------------------
            // |  TAB | HME | PGU | PGD | END | INS |   |     | W<- | WSL | W-> | WEB | tog3 |
            // | BKSP | LFT |  UP | DWN | RGT | DEL |   |     | SFT | CTL | ALT | WIN | ENT  |
            // |  ESC |  Cz |  Cx |  Cc |  Cv |  Ca |   |     | CSt | A<- | A-> | Ct  | RST  |
            //                    | LIN |     | WRD |   | SPC | mo3 | APP |

            bindings = <
&trans   &kp HOME  &kp PG_UP   &kp PG_DN    &kp END     &kp INS     &none    &win_app_left  &win_app_sel  &win_app_right  &search_web  &tog 3
&trans   &kp LEFT     &kp UP    &kp DOWN  &kp RIGHT     &kp DEL     &none        &kp RSHFT     &kp RCTRL        &kp RALT     &kp RWIN  &trans
&trans  &kp LC(Z)  &kp LC(X)   &kp LC(C)  &kp LC(V)   &kp LC(A)     &none  &kp LC(LS(TAB))  &kp LA(LEFT)   &kp LA(RIGHT)  &kp LC(TAB)    &rst
                              &sel_lines      &none  &sel_words    &trans           &trans     &kp K_APP
            >;
        };

        layer_4 {
            label = "MOUSE";

            // --------------------------------------------------------------------------------
            // | tog4 | W<- | ... | ... | ... | W-> |   |     | BR- | VL- | VL+ | BR+ | PRSC |
            // | BKSP | WIN | ALT | CTL | SFT | WSL |   | PRV | ... | ... | ... | ... | NXT  |
            // |  ESC |  Cz |  Cx |  Cc |  Cv |  Ca |   |     | ... | ... | ... | ... |      |
            //                    | mo4 | ... | ... |   | STP | PLY | MUT |

            bindings = <
&tog 4  &win_app_left      &none      &none      &none  &win_app_right         &none  &kp C_BRI_DN  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_UP   &kp PSCRN
&trans       &kp LWIN   &kp LALT  &kp LCTRL  &kp LSHFT    &win_app_sel    &kp C_PREV         &none         &none         &none         &none  &kp C_NEXT
&trans      &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)       &kp LC(A)         &none         &none         &none         &none         &none       &none
                                     &trans      &none           &none    &kp C_STOP      &kp C_PP    &kp C_MUTE
            >;
        };

        layer_5 {
            label = "NUMBER";

            // --------------------------------------------------------------------------------
            // |   %  |  -  |  9  |  8  |  7  |  /  |   |     |     |  <  |  >  |     | tog5 |
            // | BKSP |  +  |  6  |  5  |  4  |  *  |   |     | SFT | CTL | ALT | WIN | ENT  |
            // |  ESC | ENT |  3  |  2  |  1  |  .  |   |     |     |  ,  |  .  |     |      |
            //                    | 000 |  0  |  =  |   | SPC |     | mo5 |

            bindings = <
&kp PRCNT  &kp MINUS  &kp N9        &kp N8  &kp N7  &kp SLASH     &none      &none     &kp LT    &kp GT     &none  &tog 5
   &trans   &kp PLUS  &kp N6        &kp N5  &kp N4   &kp STAR     &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RWIN  &trans
   &trans  &kp ENTER  &kp N3        &kp N2  &kp N1    &kp DOT     &none      &none  &kp COMMA   &kp DOT     &none   &none
                              &triple_zero  &kp N0  &kp EQUAL    &trans      &none     &trans
            >;
        };

        layer_6 {
            label = "FUNC";

            // --------------------------------------------------------------------------------
            // |      | F12 |  F9 |  F8 |  F7 | NUM |   | USB |     |     |     |     | tog6 |
            // |      | F11 |  F6 |  F5 |  F4 | SCR |   | BLE | SFT | CTL | ALT | WIN |      |
            // |      | F10 |  F3 |  F2 |  F1 | PSE |   | BT0 | BT1 | BT2 | BT3 | BT4 | BTCL |
            //                    |     | mo6 |     |   |     | mo6 |     |

            bindings = <
&none  &kp F12  &kp F9  &kp F8  &kp F7   &kp KP_NUM    &out OUT_USB         &none         &none         &none         &none      &tog 6
&none  &kp F11  &kp F6  &kp F5  &kp F4     &kp SLCK    &out OUT_BLE     &kp RSHFT     &kp RCTRL      &kp RALT      &kp RWIN       &none
&none  &kp F10  &kp F3  &kp F2  &kp F1  &kp C_PAUSE    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                         &none  &trans        &none           &none        &trans         &none
            >;
        };
    };
};
